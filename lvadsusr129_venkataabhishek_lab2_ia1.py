# -*- coding: utf-8 -*-
"""LVADSUSR129_VenkataAbhishek_LAB2_IA1

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/13qHR11I6hGzua36zpx3j8WxcnwsH0cn5
"""

import pandas as pd
df=pd.read_csv('/content/booking.csv')
df.head()
df.info()

df.describe()

df.isna().sum()

from scipy.stats import zscore
z_score = zscore(df)
print(z_score)

import warnings
warnings.filterwarnings("ignore")
correl=df.corr()
import matplotlib.pyplot as plt
plt.boxplot(correl)
plt.show()

from sklearn.preprocessing import LabelEncoder
label_encoder = LabelEncoder()
df['room type']=label_encoder.fit_transform(df['room type'])
df['type of meal']=label_encoder.fit_transform(df['type of meal'])
df['booking status']=label_encoder.fit_transform(df['booking status'])

#df.drop_duplicates()
dup_rows = df.duplicated()
print(df[dup_rows])
#del df['number of children']
#del df['number of adults']
#del df['number of week nights']
#del df['car parking space']
#del df['market segment type']
#del df['date of reservation']
#del df['average price']
#del df['lead time']
#del df['P-C']
#del df['P-not-C']
df.tail()

X=[df['type of meal'],df['room type']]
y=df['booking status']

from sklearn.model_selection import train_test_split
x_train, x_test, y_train, y_test= train_test_split(X, y, test_size= 0.5, random_state=0)

from sklearn.linear_model import LogisticRegression
log=LogisticRegression()
input=log.fit(x_train,y_train)
out=log.predict(x_test)
print(out,"\n")

'''
            SIGMOID FUNCTION
In logistic regression, the sigmoid function is used to model the probability that a given input belongs to a particular class.
In binary classification
if the output of the sigmoid function is greater than 0.5:
  then the input is classified as belonging to the positive class
else:
  it is classified as belonging to the negative class.
It ensures smooth plotting of curve
'''

from sklearn.metrics import accuracy_score
acc=accuracy_score(out,y_test)
print(acc)