# -*- coding: utf-8 -*-
"""LVADSUSR129_Venkataabhishek_LAB2_IA2

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1no_qX6oNWX6SrTAP7YY6a4LKS2K9EjZ_
"""

import pandas as pd
df=pd.read_csv('/content/Mall_Customers.csv')
df.head()
df.info()
df.describe()

df.isnull().sum()

k=df['Annual Income (k$)'].mean()
df.fillna(k)

from sklearn.preprocessing import LabelEncoder
label_encoder = LabelEncoder()
df['Gender']=label_encoder.fit_transform(df['Gender'])
from scipy.stats import zscore
z_score = zscore(df)
print(z_score)

# Commented out IPython magic to ensure Python compatibility.
import warnings
warnings.filterwarnings("ignore")
correl=df.corr()
import matplotlib.pyplot as plt
# %matplotlib inline
plt.boxplot(correl)
plt.show()
import numpy as np
z_scores = zscore(df)
abs_z_scores = np.abs(z_scores)
filtered_entries = (abs_z_scores < 3).all(axis=1)
df_clean = df[filtered_entries]

from sklearn.preprocessing import MinMaxScaler
from sklearn.cluster import KMeans

from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score
from sklearn.svm import SVC
vAR_model_name = []
vAR_model_name.append(('SVM', SVC()))

km = KMeans(n_clusters=3)
y_predicted = km.fit_predict(df[['Annual Income (k$)','Gender']])
print(y_predicted)
df['cluster']=y_predicted

df1 = df[df.cluster==0]
df2 = df[df.cluster==1]
df3 = df[df.cluster==2]
plt.scatter(df1.Gender,df1['Annual Income (k$)'],color='green')
plt.scatter(df2.Gender,df2['Annual Income (k$)'],color='red')
plt.scatter(df3.Gender,df3['Annual Income (k$)'],color='black')
plt.scatter(km.cluster_centers_[:,0],km.cluster_centers_[:,1],color='purple',marker='*',label='centroid')
plt.xlabel('Gender')
plt.ylabel('Annual Income (k$)')
plt.legend()
plt.show()

scaler = MinMaxScaler()
scaler.fit(df[['Annual Income (k$)']])
df['Annual Income (k$)'] = scaler.transform(df[['Annual Income (k$)']])
scaler.fit(df[['Gender']])
df['Gender'] = scaler.transform(df[['Gender']])
print(df.head())
plt.scatter(df.AgeGroup,df['Annual Income (k$)'])

sse = []
k_rng = range(1,10)
for k in k_rng:
    km = KMeans(n_clusters=k)
    km.fit(df[['Gender','Annual Income (k$)']])
    sse.append(km.inertia_)

plt.xlabel('K')
plt.ylabel('Sum of squared error')
plt.plot(k_rng,sse)